name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Windows Service
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Locate MSBuild and Build the Project
      - name: Build Project
        shell: pwsh
        run: |
          $msbuildPath = "${{ env.PROGRAMFILES(X86) }}\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
          if (-Not (Test-Path $msbuildPath)) {
            $msbuildPath = "${{ env.PROGRAMFILES(X86) }}\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MSBuild.exe"
          }
          if (-Not (Test-Path $msbuildPath)) {
            throw "MSBuild not found. Ensure Visual Studio is installed on the runner."
          }
          & $msbuildPath MySQLBackup.sln /p:Configuration=Release

      # Step 3: Publish the build artifacts
      - name: Publish Build Artifacts
        shell: pwsh
        run: |
          $msbuildPath = "${{ env.PROGRAMFILES(X86) }}\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
          if (-Not (Test-Path $msbuildPath)) {
            $msbuildPath = "${{ env.PROGRAMFILES(X86) }}\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MSBuild.exe"
          }
          & $msbuildPath MySQLBackup.sln /t:Publish /p:Configuration=Release /p:PublishDir=./publish

      # Step 4: Upload the artifact for release
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows-MySQL-Backup-Service
          path: ./publish/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Download the build artifact
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Windows-MySQL-Backup-Service

      # Step 3: Create a GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: "Windows MySQL Backup Service - v${{ github.run_number }}"
          body: |
            Automated release generated by GitHub Actions.
          draft: false
          prerelease: false
          files: ./Windows-MySQL-Backup-Service/*
